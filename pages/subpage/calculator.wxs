var lendAmount=100000;
var months=120;
var payType ='e-interest'; /* 'e-principal'; */
// var payType ='e-principal';
var rate = 0.049;
var mRate = rate / 12;
var detail = [];
var loanTypes = ['providentFund', 'commercial', 'combination'];
var years = [];
for (i = 0; i < 30; i++) {
  years.push((i + 1));
}

var calculateTest = function (amount=lendAmount, y=10, r = rate) {
  console.log('the params:' + amount + ' y ' + y + ' r ' + r);
}
var calculate = function () {
  amount = 0;
  // console.log('aa ' + mRate + ' pi ' + Math.PI);
  if (payType === 'e-interest') {
    // 100000×0.566667%×(1+0.566667%)120/[(1+0.566667%)120-1]
    top = lendAmount * mRate * Math.pow((1 + mRate), months);
    bottom = Math.pow((1 + mRate), months) - 1;
    // console.log('bb ' + top + ' ' + bottom);
    amount = top / bottom;
  } else if (payType === 'e-principal') {
    amount = (lendAmount / months) + (lendAmount - 0) * mRate;
  }
  
  return amount;
}
/**
 * @param average
 * @param amount, how much you take from bank, 100 thousand
 */
var interest = function (average = 1055.7739547184322, amount = lendAmount) {
  mIntersts = [];
  mPrincipals = [];
  total = amount;
  // 第一个月的利息，剩余本金*月利率
  firstInterset = total * mRate;
  firstPrincipal = average - firstInterset;
  mIntersts.push(firstInterset);
  mPrincipals.push(firstPrincipal);

  totalRetuend = firstPrincipal;
  // 从第二个月开始计算
  for(i = 1; i < months; i++) {
    // 未还的本金
    left = total - totalRetuend;
    // 本月利息
    cIntersts = left * mRate;
    // 本月应还本金
    cPrincipal = average - cIntersts;
    mIntersts.push(cIntersts);
    mPrincipals.push(cPrincipal);

    totalRetuend += cPrincipal;
  }
  
  //return mIntersts;
  return mPrincipals;
}

var principal = function (amount = lendAmount) {
  everagePrincipal = amount / months;
  console.log('everagePrincipal' + everagePrincipal.toFixed(2));
  mIntersts = [];
  left = amount;
  returned = 0;
  for(i = 0; i < months; i++) {
    interest = left * mRate;
    mIntersts.push(interest.toFixed(2));
    returned += everagePrincipal;
    left = amount - returned;
  }
  return mIntersts;
}

module.exports = {
  calculate: calculate,
  calculateTest: calculateTest,
  details: detail,
  interest: interest,
  principal: principal,
  loanTypes: loanTypes,
  years: years
}